# -*- coding: utf-8 -*-
"""Untitled53.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1OjYEw3qzpPebMswE1n--N8oV1CprYH3u
"""

import requests
import pandas as pd
import streamlit as st
import matplotlib.pyplot as plt

API_KEY = "cOnmZGl9Z6UD6CSnzmhsgCb1Sl0fed7t"

def get_polygon_data(symbol, from_date, to_date):
    url = f"https://api.polygon.io/v2/aggs/ticker/{symbol}/range/1/day/{from_date}/{to_date}?adjusted=true&sort=asc&apiKey={API_KEY}"
    r = requests.get(url)
    data = r.json()
    if "results" not in data:
        st.error(f"Veri alÄ±namadÄ±: {data.get('error', 'Bilinmeyen hata')}")
        return None
    df = pd.DataFrame(data["results"])
    df["t"] = pd.to_datetime(df["t"], unit="ms")
    df.rename(columns={"t": "date", "c": "close"}, inplace=True)
    return df

def calculate_score(df):
    df["MA20"] = df["close"].rolling(window=20).mean()
    df["MA100"] = df["close"].rolling(window=100).mean()
    df["score"] = df["MA20"] - df["MA100"]
    return df

st.title("ðŸ“Š Stock Market Analysis (Polygon.io)")
ticker = st.selectbox("Choose a symbol", ["AAPL", "TSLA", "MSFT", "NVDA", "AMZN"])
from_date = st.date_input("From date", pd.to_datetime("2024-01-01"))
to_date = st.date_input("To date", pd.to_datetime("2024-12-31"))

if st.button("Fetch & Analyze"):
    df = get_polygon_data(ticker, from_date, to_date)
    if df is not None:
        df = calculate_score(df)
        st.line_chart(df.set_index("date")[["close", "MA20", "MA100"]])
        st.dataframe(df[["date", "close", "MA20", "MA100", "score"]].dropna().tail(20))